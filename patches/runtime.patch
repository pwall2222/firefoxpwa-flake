diff --git a/native/Cargo.toml b/native/Cargo.toml
index 47315bf..30e651f 100644
--- a/native/Cargo.toml
+++ b/native/Cargo.toml
@@ -23,6 +23,7 @@ lto = true
 portable = ["dep:phf"]
 static = ["reqwest/native-tls-vendored", "bzip2/static", "xz2/static"]
 immutable-runtime = []
+linked-runtime = []
 
 [dependencies]
 ab_glyph = "0.2.29"
diff --git a/native/src/components/runtime.rs b/native/src/components/runtime.rs
index 5bc8555..1b49462 100644
--- a/native/src/components/runtime.rs
+++ b/native/src/components/runtime.rs
@@ -240,7 +240,7 @@ impl Runtime {
         const COPY_ERROR: &str = "Failed to copy the runtime";
         const CLEANUP_ERROR: &str = "Failed to clean up the runtime";
 
-        #[cfg(platform_linux)]
+        #[cfg(feature = "linked-runtime")]
         {
             use crate::storage::Storage;
 
@@ -352,7 +352,7 @@ impl Runtime {
         Ok(())
     }
 
-    #[cfg(platform_linux)]
+    #[cfg(feature = "linked-runtime")]
     pub fn link(&self) -> Result<()> {
         use std::fs::{copy, create_dir_all};
         use std::os::unix::fs::symlink;
diff --git a/native/src/connector/process.rs b/native/src/connector/process.rs
index c7c57b9..96d1d0d 100644
--- a/native/src/connector/process.rs
+++ b/native/src/connector/process.rs
@@ -84,7 +84,7 @@ impl Process for SetConfig {
 impl Process for InstallRuntime {
     fn process(&self, _connection: &Connection) -> Result<ConnectorResponse> {
         let command = RuntimeInstallCommand {
-            #[cfg(platform_linux)]
+            #[cfg(feature = "linked-runtime")]
             link: self.link,
         };
         command.run()?;
diff --git a/native/src/connector/request.rs b/native/src/connector/request.rs
index 5c50afc..6dbcc60 100644
--- a/native/src/connector/request.rs
+++ b/native/src/connector/request.rs
@@ -153,14 +153,15 @@ pub struct SetConfig(pub Config);
 ///
 /// [`ConnectorResponse::RuntimeInstalled`] - No data.
 ///
-#[cfg(platform_linux)]
+
+#[cfg(feature = "linked-runtime")]
 #[derive(Deserialize, Debug, Eq, PartialEq, Clone)]
 pub struct InstallRuntime {
     /// Experimental: Use a linked runtime instead of downloading from Mozilla.
     pub link: bool,
 }
 
-#[cfg(not(platform_linux))]
+#[cfg(not(feature = "linked-runtime"))]
 #[derive(Debug, Eq, PartialEq, Clone)]
 pub struct InstallRuntime;
 
@@ -611,7 +612,7 @@ impl Into<crate::console::app::HTTPClientConfig> for HTTPClientConfig {
 
 deserialize_unit_struct!(GetSystemVersions);
 deserialize_unit_struct!(GetConfig);
-#[cfg(not(platform_linux))]
+#[cfg(not(feature = "linked-runtime"))]
 deserialize_unit_struct!(InstallRuntime);
 deserialize_unit_struct!(UninstallRuntime);
 deserialize_unit_struct!(GetSiteList);
diff --git a/native/src/console/app.rs b/native/src/console/app.rs
index 83a6b67..2554e57 100644
--- a/native/src/console/app.rs
+++ b/native/src/console/app.rs
@@ -277,7 +277,7 @@ pub enum RuntimeCommand {
 #[derive(Parser, Debug, Eq, PartialEq, Clone)]
 pub struct RuntimeInstallCommand {
     /// Experimental: Use a linked runtime instead of downloading from Mozilla
-    #[cfg(target_os = "linux")]
+    #[cfg(feature = "linked-runtime")]
     #[clap(long)]
     pub link: bool,
 }
diff --git a/native/src/console/runtime.rs b/native/src/console/runtime.rs
index 3c3f0fd..79219b0 100644
--- a/native/src/console/runtime.rs
+++ b/native/src/console/runtime.rs
@@ -26,14 +26,14 @@ impl Run for RuntimeInstallCommand {
         let dirs = ProjectDirs::new()?;
         let runtime = Runtime::new(&dirs)?;
 
-        #[cfg(platform_linux)]
+        #[cfg(feature = "linked-runtime")]
         if self.link {
             runtime.link().context("Failed to link runtime")?
         } else {
             runtime.install().context("Failed to install runtime")?;
         }
 
-        #[cfg(not(platform_linux))]
+        #[cfg(not(feature = "linked-runtime"))]
         runtime.install().context("Failed to install runtime")?;
 
         let runtime = Runtime::new(&dirs)?;
diff --git a/native/src/console/site.rs b/native/src/console/site.rs
index 41e59b2..bed9049 100644
--- a/native/src/console/site.rs
+++ b/native/src/console/site.rs
@@ -46,7 +46,7 @@ impl Run for SiteLaunchCommand {
             bail!("Runtime not installed");
         }
 
-        #[cfg(platform_linux)]
+        #[cfg(feature = "linked-runtime")]
         {
             use std::fs::File;
             use std::io::Read;
diff --git a/native/src/storage.rs b/native/src/storage.rs
index dcd5304..69cf1de 100644
--- a/native/src/storage.rs
+++ b/native/src/storage.rs
@@ -49,7 +49,7 @@ pub struct Config {
     /// May be overwritten with a system environment variable.
     pub runtime_use_portals: bool,
 
-    #[cfg(platform_linux)]
+    #[cfg(feature = "linked-runtime")]
     /// Experimental: Using the system runtime to save some disk space.
     /// This might not work on your system.
     pub use_linked_runtime: bool,
